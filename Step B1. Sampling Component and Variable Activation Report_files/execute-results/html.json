{
  "hash": "c459f3c2797930d9556830cdad9b7ca4",
  "result": {
    "markdown": "---\ntitle: \"Step B1. Sampling Component and Variable Activation Report\"\nauthor: \"Aidan Neher\"\nformat: html\neditor: visual\n---\n\n\n\n\n## About the simulated data\n\nWith `set.seed(1)`, data from BIP manuscript scenario 1 was simulated.\n\n## Results from original `BIP()` vs. step B1\n\nDefaults used for original `BIP()`: sample = 5000, burn-in = 1000\n\nNote, we are only focused on the results for the first view (m=1) for now.\n\nHere are the component selection MPPs using the original `BIP()` function:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbip_0 <- readRDS(\"data/2023-07-03_simulation_BIP_results.rds\")\nbip_0$CompoSelMean[1, ]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.3026 0.1828 0.2258 0.9722\n```\n:::\n:::\n\n\nHere are the component selection MPPs from one starting point:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nload(\"data/2023-08-26_image_1.RData\")\nget_CompoSelMean_m <- function(gamma_chain_m, n_burnin, n_iterations) {\n  return ( gamma_chain[, (n_burnin+1):n_iterations] %>% rowMeans() )\n}\nget_CompoSelMean_m(gamma_chain, n_burnin, n_iterations)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0 0 0 1\n```\n:::\n:::\n\n\nThese results indicate that the chain got stuck on a particular component.\n\nNow, we look at the results from a different starting point:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nload(\"data/2023-08-26_image_2.RData\")\nget_CompoSelMean_m(gamma_chain, n_burnin, n_iterations)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0 0 1 0\n```\n:::\n:::\n\n\nAgain, these results indicate that the chain got stuck on a particular component.\n\nHere we look at the MPPs of 50 features (every 10th i.e. 1st, 11th, 21st, ...) in the component active in the MCMC:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nget_VarSelMean_m_l <- function(eta_chain_m, l, n_burnin, n_iterations) {\n  return( eta_chain[l,,(n_burnin+1):n_iterations] %>% rowMeans() )\n}\nl <- 3 # TODO remove hardcoding\nVarSelMean_m_l <- get_VarSelMean_m_l(eta_chain, l, n_burnin, n_iterations)\nfeatures_of_iterest <- seq(from = 1, to = p_m, by = 10)\nVarSelMean_m_l[features_of_iterest]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] 0.9550 0.9524 0.9484 0.9470 0.9478 0.9516 0.9516 0.9516 0.9496 0.9424\n[11] 0.9486 0.9462 0.9470 0.9516 0.9492 0.9476 0.9482 0.9514 0.9486 0.9496\n[21] 0.9474 0.9500 0.9516 0.9496 0.9494 0.9484 0.9504 0.9536 0.9516 0.9498\n[31] 0.9498 0.9514 0.9496 0.9480 0.9544 0.9500 0.9520 0.9508 0.9506 0.9502\n[41] 0.9526 0.9486 0.9544 0.9484 0.9492 0.9470 0.9528 0.9536 0.9546 0.9440\n```\n:::\n:::\n\n\nThere's no discrimination between important (the first 100 features) and unimportant (the last 400) features and the MPPs are close to 95%.\n\nWe contrast these results with those from the original `BIP()` function where important features of interest are selected around 10-15% of iterations and unimportant ones are selected generally < 1% of iterations.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbip_0$VarSelMean[[m]][features_of_iterest,l]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] 0.1146 0.0974 0.1208 0.1234 0.1056 0.1594 0.1128 0.1246 0.1080 0.1262\n[11] 0.0022 0.0034 0.0020 0.0030 0.0040 0.0044 0.0028 0.0032 0.0032 0.0030\n[21] 0.0030 0.0030 0.0062 0.0048 0.0038 0.0040 0.0042 0.0028 0.0048 0.0044\n[31] 0.0024 0.0020 0.0038 0.0036 0.0054 0.0020 0.0026 0.0014 0.0056 0.0030\n[41] 0.0020 0.0028 0.0040 0.0024 0.0018 0.0026 0.0030 0.0034 0.0106 0.0034\n```\n:::\n:::\n\n\n## Run Time\n\nThe latest version of Step B1 required 16 hours. ",
    "supporting": [
      "Step-B1.-Sampling-Component-and-Variable-Activation-Report_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}